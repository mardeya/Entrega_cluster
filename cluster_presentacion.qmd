---
title: "Relación entre los indicadores sociales, económicos y ambientales alrededor del mundo"
title-slide-attributes:
  data-background-image: imagentitulo.jpg
  data-background-size: contain
  data-background-opacity: "0.7"
author:
  - Frank William Hammond Espinosa
  - Maria del Mar Deyà Torrens
  - Toni Fuentes Bauzà
format: 
  revealjs:
    transition: convex
    background-transition: fade
editor: source
---

## Resumen de nuestra base de datos


```{r, echo = FALSE, results=FALSE}
library(tidyverse)
library(factoextra)

db = read.csv("dataset_tidy.csv") 
db <- db %>% 
  mutate(HDI_level = factor(HDI_level, ordered = T, 
                            levels = c("Low", "Medium", "High", "Very High")), 
         Continent = factor(Continent))
db %>% glimpse


qual <- db %>% select(6:10) %>%  drop_na 
qual %>% glimpse
qual.acp <- prcomp(qual, scale=TRUE)
qual.acp %>% fviz_eig(addlabels=TRUE, ylim=c(0,100))
```

## Resumen de nuestra base de datos
```{r}
qual.acp %>% fviz_pca_var(col.var="contrib", gradient.cols=c("#00AFBB", "#E7B800", "#FC4E07"),repel=TRUE)
```
Tiene sentido ya que todas las variables tienen correlaciones positivas entre ellas excepto con la variable Población:
```{r}
qual %>% cor() 
```


## Matriz de distancias


```{r}
rownames(db) <- db$Country 
db_cuant <- db %>% select(HDI, CO2_prod, GNIPC, Life_expect, Population) %>% na.omit()
datos <- scale(db_cuant)  #escalar las variables
mat_dist <- dist(datos, method = "euclidian")  # Distancia euclidíana
round(as.matrix(mat_dist)[1:5, 1:5], 2)
```

```{r}
# DIstancia basada en la correlación de Pearson
#library(factoextra)
#mat_dist <- get_dist(datos, method = "pearson") 
#round(as.matrix(mat_dist)[1:5, 1:5], 2)
```
```{r}
fviz_dist(dist.obj = mat_dist, lab_size = 1) +
  theme(legend.position = "none")
```

## Valor óptimo de números de clusters

```{r}
fviz_nbclust(datos, FUNcluster = kmeans, method ="wss", diss = dist(datos, method = "euclidian"))
```


## K-mitjanes clustering

```{r}
set.seed(101)
km_clusters <- kmeans(datos, centers = 4, nstart = 25)

plot(datos, col = km_clusters$cluster, pch = 1)
```

## K-mitjanes clustering


```{r}
fviz_cluster(km_clusters, datos, show.clust.cent = TRUE, ellipse.type = "euclid", star.plot = TRUE, repel = TRUE, geom = "point") + 
  theme_bw() + 
  theme(legend.position = "none")
```

## K-mitjanes clustering

```{r}
fviz_cluster(km_clusters, datos, show.clust.cent = TRUE, ellipse.type = "euclid", star.plot = TRUE, repel = TRUE) + 
  theme_bw() + 
  theme(legend.position = "none")
```



## Dendograma

```{r}
hc_complete <- hclust(d = mat_dist, method = "complete")
hc_average <- hclust(d = mat_dist, method = "average")
cor(x = mat_dist, cophenetic(hc_complete))
cor(x = mat_dist, cophenetic(hc_average))
```

En este caso, el método \textit{linkage average} representa mejor la similitud entre obervaciones.

```{r}
hc_completo <- db_cuant %>%  scale() %>%  dist(method = "euclidean") %>%  hclust(method = "complete")

fviz_dend(x= hc_completo, k = 4, cex = 0.6) + 
  geom_line(yintercept = 5.5, linetype = "dashed")
```


