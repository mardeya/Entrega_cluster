---
title: "Relación entre los indicadores sociales, económicos y ambientales alrededor del mundo"
title-slide-attributes:
  data-background-image: imagentitulo.jpg
  data-background-size: contain
  data-background-opacity: "0.7"
author:
  - Frank William Hammond Espinosa
  - Maria del Mar Deyà Torrens
  - Toni Fuentes Bauzà
format: 
  revealjs:
    smaller: TRUE
    transition: convex
    background-transition: fade
    css: style.css
    center: TRUE
editor: source
---

## Resumen del problema

Los datos cuantitativos de nuestro dataframe son medidas, tomadas en el 2021, del desarrollo y contaminación de la mayoría de países del mundo, así como de su población. Nuestro objetivo era encontrar relaciones entre los indicadores sociales, econónimos y ambientales de los diferentes países de nuestro planeta.

```{r, echo=FALSE, out.width='60%', fig.align='center'}
knitr::include_graphics("imagen2.jpg")
```


## Recordatorio de las variables

```{r, echo = FALSE}
library(tidyverse)
db = read.csv("dataset_tidy.csv") 
db <- db %>% 
  mutate(HDI_level = factor(HDI_level, ordered = T, 
                            levels = c("Low", "Medium", "High", "Very High")), 
         Continent = factor(Continent))

str(db)
```

-   2 variables ordinales: *HDI_rank*, *HDI_level*.
-   2 variables nominales: *Country*, *Continent*.
-   5 variables cuantitativas: *HDI*, *CO2_prod*, *GNIPC*, *Life_expect*, *Population*.


## ¿A qué conclusiones llegamos?

- Diferencias entre distintos continentes.
- Asociación positiva entre las variables *GNIPC* y *Life_expect*.
- Cierta asociación positiva pero correlación baja entre *CO2_prod* y *Life_expect*.


## Análisis de Componentes Principales
Empezaremos haciendo un ACP de las variables cuantitativas. Debemos escalar los datos porque las unidades de medida son muy dispares.

```{r, echo = FALSE, results=FALSE}
library(tidyverse)
library(factoextra)
library(ggpubr)
rownames(db) = db$Country
qual <- db %>% select(6:10) %>%  drop_na %>% scale
qual.acp <- prcomp(qual)
qual.acp %>% fviz_eig(addlabels=TRUE, ylim=c(0,100))
```


## Análisis de Componentes Principales

Observamos que con dos variables representamos un 80% de la varianza total. Realizaremos, pues, un ACP de dos componentes.

```{r}
qual.acp %>% fviz_pca_var(col.var="contrib", gradient.cols=c("#00AFBB", "#E7B800", "#FC4E07"),repel=TRUE)
```

## Análisis de Componentes Principales
Tiene sentido que queden así ya que todas las variables tienen correlaciones positivas entre ellas excepto con la variable Población, que es muy disinta:
```{r}
qual %>% cor()
```

## Análisis de componentes principales
Veamos qué tan buena es la representación:

```{r}
getpca <- qual.acp %>% get_pca_var()
qual.acp %>% fviz_cos2(choice="var",axes=1:2)
```
Todas las variables quedan bien representadas, salvo quizás la producción de $CO_2$, pero tampoco llega a ser mala su representación. 


## Análisis de Componentes Principales
Finalmente, grafiquemos nuestro ACP:

```{r}
fviz_pca_biplot(qual.acp, repel = TRUE,
                col.var = "#2E9FDF", # color para las variables
                col.ind = "#696969"  # color para las observaciones
                , geom = "point")
```


Cabe destacar que tanto China como la India son outliers por población. (Superpoblación)

## Mapa respecto a la variable nivel_HDI

![](hdi_graph.png){width="50%"}

## Clustering
En primer lugar, determinaremos el número de clusters a utilizar. Si hiciésemos un K-means, el número óptimo sería 3, como indica el siguiente gráfico:

```{r}
fviz_nbclust(qual, FUNcluster = kmeans, method ="wss", diss = dist(qual, method = "manhattan"))
```


## K-medias clustering
Realizaremos primero un clustering K-means:
```{r,warnings=FALSE}
set.seed(101)
km_clusters <- kmeans(qual, centers = 3, nstart = 25)

fviz_cluster(km_clusters, qual, show.clust.cent = TRUE, ellipse.type = "manhattan", star.plot = TRUE, repel = TRUE, geom = "point") + 
  theme_bw() + 
  theme(legend.position = "none")
```

## K-medias clustering

Observamos dos outliers, que corresponden a China y la India (países superpoblados). El resto de los países quedan bastante bien clasificados respecto a la CP1.

## K-medias clustering


```{r}
library(factoextra)
library(leaflet)
# Utilizaremos la siguiente funcion.
generate_map <- function (cluster) {
  world_map <- map_data("world")

  world_map <- world_map %>%
    mutate(region = ifelse(region == "USA", "United States", region)) %>%
    mutate(region = ifelse(region == "UK", "United Kingdom", region)) %>%
    mutate(region = ifelse(region == "Russia", "Russian Federation", region)) %>%
    mutate(region = ifelse(region == "Tanzania", "Tanzania (United Republic of)", region)) %>%
    mutate(region = ifelse(region == "Saint Vincent", "Saint Vincent and the Grenadines", region)) %>%
    mutate(region = ifelse(region == "Venezuela", "Venezuela (Bolivarian Republic of)", region)) %>%
    mutate(region = ifelse(region == "Vietnam", "Viet Nam", region)) %>%
    mutate(region = ifelse(region == "Swaziland", "Eswatini (Kingdom of)", region)) %>%  # quin nom és aquest
    mutate(region = ifelse(region == "Syria", "Syrian Arab Republic", region)) %>%
    mutate(region = ifelse(region == "Moldova", "Moldova (Republic of)", region)) %>%
    mutate(region = ifelse(region == "Laos", "Lao People's Democratic Republic", region)) %>%
    mutate(region = ifelse(region == "Democratic Republic of the Congo", "Congo (Democratic Republic of the)", region)) %>%
    mutate(region = ifelse(region == "Republic of Congo", "Congo", region)) %>%
    mutate(region = ifelse(region == "Ivory Coast", "Cote d'Ivoire", region)) %>%
    mutate(region = ifelse(region == "Czech Republic", "Czechia", region)) %>%
    mutate(region = ifelse(region == "Somalia", "Somalya", region)) %>%
    mutate(region = ifelse(region == "Iran", "Iran (Islamic Republic of)", region)) %>%
    mutate(region = ifelse(region == "Bolivia", "Bolivia (Plurinational State of)", region))

  w <- world_map %>% ggplot(aes(x = long, y = lat)) +
    geom_polygon(aes(group = group, fill = as.factor(cluster[region]))) +
    theme_void()+
    theme(legend.position = "none")
    
  return(w)
}

# Pes clustering de k-mitjanes posar
#   generate_map(km$cluster)
# Pes clustering jerarquitzat posar
#   generate_map(cutree(hc, k=5))

```

```{r, echo=FALSE, out.width='50%', fig.align='center'}
layout(matrix(c(1,2), nrow = 1, byrow = TRUE))
generate_map(km_clusters$cluster)
knitr::include_graphics("hdi_graph.png")
```

## K-medias clustering con k=5
```{r,warnings=FALSE}
set.seed(101)
km_clusters <- kmeans(qual, centers = 5, nstart = 25)
```

```{r, echo=FALSE, out.width='50%', fig.align='center'}
layout(matrix(c(1,2), nrow = 1, byrow = TRUE))
generate_map(km_clusters$cluster)
knitr::include_graphics("hdi_graph.png")
```

## K-medoid clustering
Utilizaremos 3 clusters con la distancia de Manhattan.
```{r}
library(cluster)
set.seed(123)
pam_clusters <- pam(qual, k=3, metric = "manhattan")
fviz_cluster(pam_clusters, datos, ellipse.type = "t", repel = TRUE, geom = "point") +
  theme_bw() +
  theme(legend.position = "none")
```
## K-medoid clustering

```{r, echo=FALSE, out.width='50%', fig.align='center'}
layout(matrix(c(1,2), nrow = 1, byrow = TRUE))
generate_map(pam_clusters$cluster)
knitr::include_graphics("hdi_graph.png")
```
## K-medoid clustering con k = 5

```{r}
library(cluster)
set.seed(123)
pam_clusters <- pam(qual, k=5, metric = "manhattan")
```

```{r, echo=FALSE, out.width='50%', fig.align='center'}
layout(matrix(c(1,2), nrow = 1, byrow = TRUE))
generate_map(pam_clusters$cluster)
knitr::include_graphics("hdi_graph.png")
```

## Dendogramas

```{r, echo = TRUE}
mat_dist <- dist(qual, method = "manhattan")  # Distancia de manhattan

hc_complete <- hclust(d = mat_dist, method = "complete")
hc_average <- hclust(d = mat_dist, method = "average")
hc_ward <- hclust(d = mat_dist, method = "ward.D")
cor(x = mat_dist, cophenetic(hc_complete))
cor(x = mat_dist, cophenetic(hc_average))
cor(x = mat_dist, cophenetic(hc_ward))
```
## Linkage average
En este caso, el método linkage average representa mejor la similitud entre observaciones.
```{r}
hc_completo <- qual %>%  dist(method = "manhattan") %>%  hclust(method = "complete")

dend_complete <- fviz_dend(x= hc_complete, k = 5, cex = 0.6,show_labels=FALSE,main="Dendograma: Linkage completo",ylab="Altura",xlab="Países") +geom_line(yintercept=5.5, linetype="dashed")
dend_average <- fviz_dend(x= hc_average, k = 5, cex = 0.6,show_labels=FALSE,main="Dendograma: Linkage medias",ylab="Altura",xlab="Países") +geom_line(yintercept=5.5,linetype="dashed")
dend_ward <- fviz_dend(x= hc_ward, k = 5, cex = 0.6,show_labels=FALSE,main="Dendograma: Linkage ward",ylab="Altura",xlab="Países") +geom_line(yintercept=5.5,linetype="dashed")
layout(matrix(c(1,2,3), nrow = 1, byrow = TRUE))
dend_average 
```

## Linkage average

```{r, echo=FALSE, out.width='50%', fig.align='center'}
layout(matrix(c(1,2), nrow = 1, byrow = TRUE))
generate_map(cutree(hc_average, k = 5))
knitr::include_graphics("hdi_graph.png")
```
## Linkage complete

```{r}
dend_complete
```
## Linkage complete
```{r, echo=FALSE, out.width='50%', fig.align='center'}
layout(matrix(c(1,2), nrow = 1, byrow = TRUE))
generate_map(cutree(hc_completo, k = 5))
knitr::include_graphics("hdi_graph.png")
```
## Linkage ward

```{r}
dend_ward
```

## Linkage ward

```{r, echo=FALSE, out.width='50%', fig.align='center'}
layout(matrix(c(1,2), nrow = 1, byrow = TRUE))
generate_map(cutree(hc_ward, k = 5))
knitr::include_graphics("hdi_graph.png")
```

## Conclusiones de los dendogramas

- En los tipos $average$ y $complete$, China y la India quedan en un cluster separado.
- El cluster $average$ no clasifica demasiado bien.
- El mejor linkage es $ward$, en el que quedan otros cuatro clusters bien diferenciados con, más o menos, el mismo número de países.

## Conclusiones finales
- Clusters aglomerativos (K-means, K-medoids) obtienen muy buenos resultados; similares.
- Excepto con el linkage $average$, se obtienen clusterings parecidos a los de $HDI\_level$.
- Conclusión: $HDI\_index$ explica bien las demás variables cuantitativas.
- Outliers en cuanto a población: China e India.
- Estudios futuros: repetir el estudio eliminando o compensando la variable de población.